{#
  Aside
  ==============================
  * classes: ARRAY (optional) - Custom classes
  * attributes OBJECT (optional) - Custom attributes
#}

{# Set the element's base classes #}
{% set elementBaseClasses = [] %}

{# Merge custom classes with the base classes #}
{% if classes is defined and classes is not empty %}
	{% set elementBaseClasses = elementBaseClasses | merge(classes) %}
{% endif %}

{# Set the element's base attributes #}
{% set elementAttributes = {
	id: 'aside',
	class: elementBaseClasses
} %}

{# Merge custom attributes with the base attributes #}
{% if attributes is defined and attributes is not empty %}
	{% set elementAttributes = elementAttributes | merge(attributes) %}
{% endif %}

{# Get config #}
{% set section = guide.config.websitedocumention.section %}
{% set settingsUrl = guide.config.websitedocumention.settingsUrl %}
{% set entries = craft.entries.section(section.handle).level(1).all() | default %}

{# Get properties from settings #}
{% set logoID = settings.logo[0] | default %}
{% set brandBackground = websiteglobal.getSettings().brandBgColor | default('FFF') %}
{% set brandText = websiteglobal.getSettings().colors.brandText | default('000') %}

{# Render the HTML #}
<aside {{ attr(elementAttributes) }}>
	{% embed global.url ~ '/_atoms/_link'
		with {
			url: siteUrl,
			attributes: {
				id: 'site-button',
				style: styles.parse({
					background: styles.hex(global.colors.brandBackground),
					color: styles.hex(global.colors.brandText)
				})
			}
		}
	%}
		{% block content %}
			{{ 'Back to Website' | t }}
			{% include global.url ~ '/_atoms/_icons/_arrow' %}
		{% endblock %}
	{% endembed %}
	<div id="header">
		<div>
			{% if logoID is not empty %}
				<div id="sidebar-logo">
					<a href="/" title="{{ siteName }}">
						<img src="{{ craft.assets().id(logoID).one.url }}"
							title="{{ 'Brand Logo' | t }}" />
					</a>
				</div>
			{% endif %}
			<h1 id="sidebar-title">
				{{ 'CMS Guide' | t }}
			</h1>
		</div>
		<div data-burger>
			<span></span>
			<span></span>
		</div>
	</div>
	<div id="sidebar-content"></div>
</aside>

{# Create Structure for JSON #}
{% set entriesStructure = [] %}

{% for entry in entries %}
	{% set children = [] %}
	{% if entry.children is not empty %}
		{% for item in entry.children.all() %}
			{% set children = children | merge([item.title]) %}
		{% endfor %}
	{% endif %}

	{% set entriesStructure =
		entriesStructure | merge(
			[
				{
					title: entry.title,
					children: children
				}
			]
		)
	%}
{% endfor %}

<script>
	window.cmsGuideSections = {{ cmsGuide.config.sections | json_encode | raw }}
	window.accentBgColor = {{ styles.hex(global.colors.accentBackground) | json_encode | raw }}
	window.colors.accentText = {{ styles.hex(global.colors.accentText) | json_encode | raw }}
</script>

{# Render the HTML #}
{# {% if entries is not empty %}
	<aside {{ attr(elementAttributes) }}>
		{% for entry in entries %}
			{% set attributes = {
				class: 'tab text-left',
				role: 'tab',
				'data-tab': entry.title | kebab,
				'data-hash': entry.title | kebab,
				'aria-selected': 'false',
				'aria-controls': entry.title | kebab
			} %}
			<button {{ attr(attributes) }}>{{ entry.title }}</button>
			{% if entry.children is not empty %}
				{% for item in entry.children.all() %}
					{% set attributes = {
						class: 'tab inline-block text-sm text-left ml-8',
						role: 'tab',
						'data-tab': item.title | kebab,
						'data-hash': item.title | kebab,
						'aria-selected': 'false',
						'aria-controls': item.title | kebab
					} %}
					<button {{ attr(attributes) }}>{{ item.title }}</button>
				{% endfor %}
			{% endif %}
		{% endfor %}
	</aside>
{% endif %} #}
